"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LuceneOrderingQueryParser_1 = require("../src/parsers/LuceneOrderingQueryParser");
var TestTools_1 = require("./TestTools");
var parser = new LuceneOrderingQueryParser_1.LuceneOrderingQueryParser();
function it(query, fn) {
    test(query, function () {
        var _a = parser.parse(query), tree = _a[0], ast = _a[1];
        //console.log(query);
        TestTools_1.dump(ast, 'ast.json');
    });
}
it('age: [5 TO 9]', TestTools_1.noop);
it('age: [5 TO *]', TestTools_1.noop);
it('age: [* TO 9]', TestTools_1.noop);
it('age: [2345 TO 2110]', TestTools_1.noop);
// it('age: [5 - 9]', noop);
// it('age: [5 - *]', noop);
// it('age: [* - 9]', noop);
// it('age: [2345 - 2110]', noop);
it('age: [2345 TO 2110]', TestTools_1.noop);
it('age: [2345 TO 2110]', TestTools_1.noop);
it('age: [2345 TO 2110]', TestTools_1.noop);
it('age: [2345 TO 2110]', TestTools_1.noop);
it('height: [1.6 TO 2.0]', TestTools_1.noop);
it('height: [* TO 2.0]', TestTools_1.noop);
it('height: [1.6 TO *]', TestTools_1.noop);
it('born: [2020-03-02 TO 2020-03-25]', TestTools_1.noop);
it('born: [2020-03-02T21:21:00 TO 2020-03-25T21:23:00]', TestTools_1.noop);
it('born: [2020-03-02T21:24:00+01:00 TO 2020-03-25T21:24:00+01:00]', TestTools_1.noop);
it('born: [* TO 2020-03-25T21:24:00+01:00]', TestTools_1.noop);
it('born: [2020-03-02T21:24:00+01:00 TO *]', TestTools_1.noop);
it('born: [-5days TO *]', TestTools_1.noop);
it('born: [TODAY+5D TO *]', TestTools_1.noop);
it('age: [5 TO 10] ORDER BY foo', function () { });
it('  age: [5 TO 10] ORDER BY foo DESC, fax ASC, fox', function () { });
it('name: Peter', function () { });
it('name: Peter AND age: [10 TO 100]', function () { });
it('name: Peter OR name: Anna NOT name: Claus OR name: Hans', function () { });
it('name: Peter OR name: Anna NOT name: "Claus ParsÃ¸" OR name: Hans', function () { });
it('name: Peter OR name: Anna NOT name: Claus* OR name: Hans', function () { });
it('(name: Peter OR name: Anna) AND (age: 5 OR age: [8 TO 10])', function () { });
it('ship.name: FooBarasd AND $version: [6 TO *] AND $created: [2020-03-02T21:24:00+01:00 TO 2020-03-25] AND contentType: notification AND id: 123', function () { });
it('$created: [2020-03-02T21:24:00+01:00 TO 2020-03-25T21:24:00+01:00]', function () { });
it('$created: [2020-03-02T21:24:00+01:00 TO *]', function () { });
it('$created: [22 TO *]', function () { });
it('ship.name: FooBarasd AND $version: [6 TO 10] AND $created: [2020-03-02T21:24:00+01:00 TO 2020-03-25] AND contentType: notification AND id: 123', function () { });
it('ship.name: FooBarasd AND $created: [2020-03-02T21:24:00+01:00 TO 2020-03-25] AND contentType: notification AND id: 123', function () { });
it('$version: [6.6 TO *]', function () { });
// it('$version: [61233 - 10123123123]', () => {});
it('$version: [6 TO * ]', function () { });
it('$version: [ 6 TO * ]', function () { });
it('*:*', function () { });
it('name: Peter Hansen', function () { });
//# sourceMappingURL=LuceneOrderingQueryParserTest.test.js.map